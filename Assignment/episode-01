 ‚óè What is Emmet?

Emmet is a plugin/tool for code editors (like VS Code, Sublime, etc.) that helps write HTML and CSS faster using abbreviations.

Example: Typing ul>li*3 and hitting Tab expands to:

<ul>
  <li></li>
  <li></li>
  <li></li>
</ul>




‚óè Difference between a Library and Framework?
Feature	Library	Framework
Control	You call the library	Framework calls your code
Flexibility	More flexible	More opinionated (fixed structure)
Usage	Used for specific tasks	Provides a full structure
Example	jQuery, Lodash	Angular, Django

üü° React is a Library, Angular is a Framework.




 What is CDN? Why do we use it?

CDN stands for Content Delivery Network.

It‚Äôs a network of servers distributed globally to deliver static content (like JS, CSS, images) faster.

Why use it?

Reduces load on your own server

Increases speed and performance

Improves availability and redundancy

Example:

<script src="https://cdn.jsdelivr.net/npm/react@18/umd/react.development.js"></script>




‚óè Why is React known as React?

React is called "React" because:

It enables reactive and dynamic user interfaces.

It automatically reacts to data changes and updates the DOM efficiently using its virtual DOM.



‚óè What is crossorigin in script tag?

The crossorigin attribute is used when loading scripts from a different domain (CORS-related).

It controls how the browser handles cross-origin requests.

Common values:

anonymous ‚Äì No credentials (cookies, HTTP auth) sent.

use-credentials ‚Äì Sends credentials.

Example:

<script src="..." crossorigin="anonymous"></script>


Needed when:

Using CDNs

Ensuring proper error handling for crossorigin scripts




‚óè What is the difference between React and ReactDOM?
	React	ReactDOM
Role	Core library (logic, components)	Deals with rendering to the DOM
Example Use	React.createElement, Hooks	ReactDOM.render, createRoot
Package	react	react-dom

You use React to build components, and ReactDOM to render them into the page.




‚óè Difference between react.development.js and react.production.js via CDN?
File	react.development.js	react.production.js
Use Case	Development	Production
Size	Larger (with warnings, checks)	Smaller (optimized)
Features	Helpful error messages	Stripped-down, faster

üü° In production, always use production.js to improve performance.




‚óè What is async and defer in <script> tag?

These attributes control how JavaScript is loaded.

Attribute	When Script Runs	Blocks HTML Parsing?
async	As soon as it's downloaded	Yes
defer	After HTML parsing is complete (in order)	No

Example:

<script src="script.js" async></script>
<script src="script.js" defer></script>


üü° Use defer for scripts that depend on the full HTML being loaded.
üü° Use async for independent,


Coding assignment:::




1-How Create hello world! in HTML


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Namaste-React</title>
</head>
<body>
    <div id="root">
      <h1>Hello world!</h1>  
    </div>
</body>
</html>


2- How Create hello world! in JS

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Namaste-React</title>
  </head>
  <body>
    <div id="root"></div>
    <script>
      const heading = document.createElement("h1");
      heading.innerHTML = "Hello World! from JavaScript";

      const root = document.getElementById("root");
      root.appendChild(heading);
    </script>
  </body>
</html>


3-How Create hello world! in React

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Namaste-React</title>
  </head>
  <body>
    <div id="root"></div>
    <script
      crossorigin
      src="https://unpkg.com/react@18/umd/react.development.js"
    ></script>
    <script
      crossorigin
      src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"
    ></script>

    <script>
      const heading = React.createElement(
        "h1", //heading
        { id: "heading", abc: "xyz" }, //id or heading  and attribute
        "Hello World! from React" // what data we want to put in h1
      );

      // console.log(heading); //Object

      const root = ReactDOM.createRoot(document.getElementById("root"));

      root.render(heading);
    </script>
  </body>
</html>